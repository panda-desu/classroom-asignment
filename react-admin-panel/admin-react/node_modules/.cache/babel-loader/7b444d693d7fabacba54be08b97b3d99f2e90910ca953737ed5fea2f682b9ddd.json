{"ast":null,"code":"var _jsxFileName = \"/Users/evening/Desktop/panda/react-admin-panel/admin-react/src/pages/Categories.jsx\",\n  _s = $RefreshSig$();\nimport CategoryList from \"../components/Categories/CategoryList\";\nimport Heading from \"../components/Heading\";\nimport DynamicModal from \"../components/utils/DynamicModal\";\nimport CategoryCreate from \"../components/Categories/CategoryCreate\";\nimport CategoryEdit from \"../components/Categories/CategoryEdit\";\n// import useQuery from '../hooks/useQuery';\nimport { useModal } from \"../Context/ModalContext\";\nimport { useCategories } from \"../hooks/categories\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Categories() {\n  _s();\n  const [categories, setCategories] = useCategories();\n  const {\n    setModalContent,\n    setModalTitle,\n    setModalShow\n  } = useModal();\n  const afterSubmit = category => {\n    setCategories([...categories, category]);\n  };\n  const showCreateModal = () => {\n    setModalTitle(\"Category nemeh\");\n    setModalContent( /*#__PURE__*/_jsxDEV(CategoryCreate, {\n      afterSubmit: afterSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 21\n    }, this));\n    setModalShow(true);\n  };\n  const afterEdit = category => {\n    let newCategories = categories.map(cat => {\n      if (cat.id === category.id) {\n        return category;\n      }\n      return cat;\n    });\n    setCategories(newCategories);\n  };\n  const showEditModal = category => {\n    setModalContent( /*#__PURE__*/_jsxDEV(CategoryEdit, {\n      category: category,\n      afterEdit: afterEdit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }, this));\n    setModalShow(true);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-sm body-container\",\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        title: \"Categories\",\n        handleShow: showCreateModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CategoryList, {\n        items: categories,\n        onEdit: showEditModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(Categories, \"Bcx+kWt8KN7NJOUjiTem2G8YjN4=\", false, function () {\n  return [useCategories, useModal];\n});\n_c = Categories;\nvar _c;\n$RefreshReg$(_c, \"Categories\");","map":{"version":3,"names":["CategoryList","Heading","DynamicModal","CategoryCreate","CategoryEdit","useModal","useCategories","Categories","categories","setCategories","setModalContent","setModalTitle","setModalShow","afterSubmit","category","showCreateModal","afterEdit","newCategories","map","cat","id","showEditModal"],"sources":["/Users/evening/Desktop/panda/react-admin-panel/admin-react/src/pages/Categories.jsx"],"sourcesContent":["import CategoryList from \"../components/Categories/CategoryList\";\nimport Heading from \"../components/Heading\";\nimport DynamicModal from \"../components/utils/DynamicModal\";\nimport CategoryCreate from \"../components/Categories/CategoryCreate\";\nimport CategoryEdit from \"../components/Categories/CategoryEdit\";\n// import useQuery from '../hooks/useQuery';\nimport { useModal } from \"../Context/ModalContext\";\nimport { useCategories } from \"../hooks/categories\";\n\nexport default function Categories() {\n  const [categories, setCategories] = useCategories();\n\n  const { setModalContent, setModalTitle, setModalShow } = useModal();\n\n  const afterSubmit = (category) => {\n    setCategories([...categories, category]);\n  };\n\n  const showCreateModal = () => {\n    setModalTitle(\"Category nemeh\");\n    setModalContent(<CategoryCreate afterSubmit={afterSubmit} />);\n    setModalShow(true);\n  };\n\n  const afterEdit = (category) => {\n    let newCategories = categories.map((cat) => {\n      if (cat.id === category.id) {\n        return category;\n      }\n      return cat;\n    });\n    setCategories(newCategories);\n  };\n\n  const showEditModal = (category) => {\n    setModalContent(<CategoryEdit category={category} afterEdit={afterEdit} />);\n    setModalShow(true);\n  };\n\n  return (\n    <>\n      <div className=\"container-sm body-container\">\n        <Heading title=\"Categories\" handleShow={showCreateModal} />\n        <CategoryList items={categories} onEdit={showEditModal} />\n      </div>\n    </>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,YAAY,MAAM,uCAAuC;AAChE,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,YAAY,MAAM,kCAAkC;AAC3D,OAAOC,cAAc,MAAM,yCAAyC;AACpE,OAAOC,YAAY,MAAM,uCAAuC;AAChE;AACA,SAASC,QAAQ,QAAQ,yBAAyB;AAClD,SAASC,aAAa,QAAQ,qBAAqB;AAAC;AAAA;AAEpD,eAAe,SAASC,UAAU,GAAG;EAAA;EACnC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGH,aAAa,EAAE;EAEnD,MAAM;IAAEI,eAAe;IAAEC,aAAa;IAAEC;EAAa,CAAC,GAAGP,QAAQ,EAAE;EAEnE,MAAMQ,WAAW,GAAIC,QAAQ,IAAK;IAChCL,aAAa,CAAC,CAAC,GAAGD,UAAU,EAAEM,QAAQ,CAAC,CAAC;EAC1C,CAAC;EAED,MAAMC,eAAe,GAAG,MAAM;IAC5BJ,aAAa,CAAC,gBAAgB,CAAC;IAC/BD,eAAe,eAAC,QAAC,cAAc;MAAC,WAAW,EAAEG;IAAY;MAAA;MAAA;MAAA;IAAA,QAAG,CAAC;IAC7DD,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,MAAMI,SAAS,GAAIF,QAAQ,IAAK;IAC9B,IAAIG,aAAa,GAAGT,UAAU,CAACU,GAAG,CAAEC,GAAG,IAAK;MAC1C,IAAIA,GAAG,CAACC,EAAE,KAAKN,QAAQ,CAACM,EAAE,EAAE;QAC1B,OAAON,QAAQ;MACjB;MACA,OAAOK,GAAG;IACZ,CAAC,CAAC;IACFV,aAAa,CAACQ,aAAa,CAAC;EAC9B,CAAC;EAED,MAAMI,aAAa,GAAIP,QAAQ,IAAK;IAClCJ,eAAe,eAAC,QAAC,YAAY;MAAC,QAAQ,EAAEI,QAAS;MAAC,SAAS,EAAEE;IAAU;MAAA;MAAA;MAAA;IAAA,QAAG,CAAC;IAC3EJ,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,oBACE;IAAA,uBACE;MAAK,SAAS,EAAC,6BAA6B;MAAA,wBAC1C,QAAC,OAAO;QAAC,KAAK,EAAC,YAAY;QAAC,UAAU,EAAEG;MAAgB;QAAA;QAAA;QAAA;MAAA,QAAG,eAC3D,QAAC,YAAY;QAAC,KAAK,EAAEP,UAAW;QAAC,MAAM,EAAEa;MAAc;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA;EACtD,iBACL;AAEP;AAAC,GAtCuBd,UAAU;EAAA,QACID,aAAa,EAEQD,QAAQ;AAAA;AAAA,KAH3CE,UAAU;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}